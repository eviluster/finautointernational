name: Deploy via SCP

on:
  push:
    branches: [staging]

jobs:
  deploy:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: 📤 Transferir archivos al VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./"
        target: "/home/finauto/full-proyect-1"
        strip_components: 1
        
    - name: 🚀 Ejecutar despliegue en VPS
      uses: appleboy/ssh-action@v1.2.0
      id: deploy
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script_stop: true
        script: |
          # Verificar directorios
          echo "🔍 Verificando directorios..."
          ls -la /home/finauto/full-proyect-1/
          
          # Backup de la versión actual (excluyendo db-data y nginx/letsencrypt)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_DIR="/home/finauto/backups/$TIMESTAMP"
          mkdir -p "$BACKUP_DIR"
          echo "📦 Creando backup en $BACKUP_DIR"
          
          # Usar find para excluir db-data y nginx/letsencrypt
          find /home/finauto/full-proyect-1 -mindepth 1 -maxdepth 1 ! -name 'db-data' ! -path '*/nginx/letsencrypt*' -exec cp -r {} "$BACKUP_DIR/" \;
          echo "✅ Backup completado"
          
          # Guardar la ruta del backup en una variable local
          echo "BACKUP_DIR=$BACKUP_DIR" > /tmp/backup_dir.txt

          # Corregir docker-compose.yml
          echo "🔧 Corrigiendo docker-compose.yml..."
          echo "✅ docker-compose.yml corregido"

          # Despliegue
          echo "🚀 Iniciando despliegue..."
          cd /home/finauto/full-proyect-1
          docker compose down -v --rmi all || true
          docker builder prune -af
          docker compose up -d --build
          echo "✅ Despliegue completado"

  rollback:
    needs: [deploy]
    if: ${{ failure() }}
    runs-on: ubuntu-24.04
    steps:
    - name: 🔄 Restaurar versión anterior
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          # Obtener último backup
          echo "🔍 Buscando último backup..."
          LATEST_BACKUP=$(ls -td /home/finauto/backups/* | head -1)
          
          if [ -z "$LATEST_BACKUP" ]; then
            echo "❌ No hay backups disponibles"
            exit 1
          fi
          
          echo "📦 Último backup encontrado: $LATEST_BACKUP"

          # Restauración (excluyendo db-data y nginx/letsencrypt)
          echo "🔙 Restaurando backup..."
          
          # Eliminar todo excepto db-data
          find /home/finauto/full-proyect-1 -mindepth 1 -maxdepth 1 ! -name 'db-data' -exec rm -rf {} \;
          
          # Copiar todo del backup excepto nginx/letsencrypt
          find "$LATEST_BACKUP" -mindepth 1 -maxdepth 1 ! -name 'db-data' ! -path '*/nginx/letsencrypt*' -exec cp -r {} /home/finauto/full-proyect-1/ \;
          echo "✅ Restauración completada"
          
          # Corregir docker-compose.yml
          echo "🔧 Corrigiendo docker-compose.yml..."
          echo "✅ docker-compose.yml corregido"
          
          # Reiniciar servicios anteriores
          echo "🔄 Reiniciando servicios..."
          cd /home/finauto/full-proyect-1
          docker compose down -v --rmi all
          docker compose up -d --build
          echo "✅ Rollback completado exitosamente"