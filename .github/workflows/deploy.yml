name: Deploy via SCP

on:
  push:
    branches: [staging]

jobs:
  deploy:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: ðŸ“¤ Transferir archivos al VPS (excluyendo db-data)
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          rsync -avz --exclude='db-data' ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/finauto/full-proyect-1/
        
    - name: ðŸš€ Ejecutar despliegue en VPS
      uses: appleboy/ssh-action@v1.2.0
      id: deploy
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script_stop: true
        script: |
          # Backup de la versiÃ³n actual (excluyendo db-data)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_DIR="/home/finauto/backups/$TIMESTAMP"
          mkdir -p "$BACKUP_DIR"
          find /home/finauto/full-proyect-1 -mindepth 1 -maxdepth 1 ! -name 'db-data' -exec cp -r {} "$BACKUP_DIR/" \;
          echo "BACKUP_DIR=$BACKUP_DIR" >> $GITHUB_ENV

          # ConfiguraciÃ³n esencial
          #mkdir -p ~/full-proyect-1/nginx/conf
          #echo "proxy_set_header Host \$host;" > ~/full-proyect-1/nginx/proxy_params
          #echo "proxy_set_header X-Real-IP \$remote_addr;" >> ~/full-proyect-1/nginx/proxy_params
          #echo "proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;" >> ~/full-proyect-1/nginx/proxy_params
          #echo "proxy_set_header X-Forwarded-Proto \$scheme;" >> ~/full-proyect-1/nginx/proxy_params

          # Despliegue
          cd /home/finauto/full-proyect-1
          docker compose down -v --rmi all || true
          docker builder prune -af
          docker compose up -d --build

  rollback:
    needs: [deploy]
    if: ${{ failure() }}
    runs-on: ubuntu-24.04
    steps:
    - name: ðŸ”„ Restaurar versiÃ³n anterior
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          # Obtener Ãºltimo backup
          LATEST_BACKUP=$(ls -td /home/finauto/backups/* | head -1)
          
          if [ -z "$LATEST_BACKUP" ]; then
            echo "No hay backups disponibles"
            exit 1
          fi

          # RestauraciÃ³n (excluyendo db-data)
          echo "ðŸ”™ Restaurando backup: $LATEST_BACKUP"
          find "$LATEST_BACKUP" -mindepth 1 -maxdepth 1 ! -name 'db-data' -exec cp -r {} /home/finauto/full-proyect-1/ \;

          # Reiniciar servicios
          cd /home/finauto/full-proyect-1
          docker compose down -v --rmi all
          docker compose up -d --build
          echo "âœ… Rollback completado exitosamente"