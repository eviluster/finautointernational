services:
  db:
    image: postgres:17-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - kia-network

  #adminer:
   # image: adminer:5.0.2
   # container_name: adminer
   # restart: always
   # ports:
   #   - "8082:8080"
   # depends_on:
   #   - db
   # networks:
   #   - web-network

  backend:
    build: ./Finauto-Back-End
    container_name: backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      NODE_ENV: staging
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kia-network

  front-admin:
    build: ./Finauto-Admin
    container_name: front-admin
    environment:
      VITE_API_URL: https://api.finautointernational.com
    networks:
      - kia-network

  front-cliente:
    build: ./Finauto-Cliente
    container_name: front-cliente
    environment:
      VITE_API_URL: https://api.finautointernational.com
    networks:
      - kia-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d/
      - ./nginx/proxy_params:/etc/nginx/proxy_params
      - ./certs:/etc/ssl
    depends_on:
      - backend
      - front-cliente
    networks:
      - kia-network

networks:
  kia-network: